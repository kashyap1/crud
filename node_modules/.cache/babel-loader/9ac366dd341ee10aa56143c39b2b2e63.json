{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ktatmiya/learning/j/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ktatmiya/learning/j/src/utils/renderField.jsx\";\nimport React from \"react\";\nexport const renderField = (_ref) => {\n  let defaultValue = _ref.defaultValue,\n      input = _ref.input,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      others = _objectWithoutProperties(_ref, [\"defaultValue\", \"input\", \"meta\"]);\n\n  const value = input.value,\n        newVal = _objectWithoutProperties(input, [\"value\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, newVal, others, {\n    defaultValue: value ? value : defaultValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, error)));\n};\nexport const RadioGroup = ({\n  input,\n  options,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, options.map(o => React.createElement(\"label\", {\n  key: o.value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({\n  type: \"radio\"\n}, input, {\n  value: o.value,\n  checked: o.value === input.value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})), \" \", o.title)), touched && error && React.createElement(\"span\", {\n  style: {\n    color: \"red\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, error));\nexport const CheckboxGroup = ({\n  input,\n  options,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, options.map(o => React.createElement(\"label\", {\n  key: o.value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({\n  type: \"checkbox\"\n}, input, {\n  name: input.name + \"-\" + o.value,\n  value: o.value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n})), \" \", o.title)), touched && error && React.createElement(\"span\", {\n  style: {\n    color: \"red\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, error));","map":{"version":3,"sources":["/Users/ktatmiya/learning/j/src/utils/renderField.jsx"],"names":["React","renderField","defaultValue","input","meta","touched","error","others","value","newVal","color","RadioGroup","options","map","o","title","CheckboxGroup","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,UAKrB;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,uBAFJC,IAEI;AAAA,MAFIC,OAEJ,aAFIA,OAEJ;AAAA,MAFaC,KAEb,aAFaA,KAEb;AAAA,MADDC,MACC;;AAAA,QACIC,KADJ,GACyBL,KADzB,CACIK,KADJ;AAAA,QACcC,MADd,4BACyBN,KADzB;;AAEJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,+CACMM,MADN,EAEMF,MAFN;AAGE,IAAA,YAAY,EAAEC,KAAK,GAAGA,KAAH,GAAWN,YAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAMGG,OAAO,IAAKC,KAAK,IAAI;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCJ,KAAhC,CANxB,CADF,CADF;AAYD,CAnBM;AAqBP,OAAO,MAAMK,UAAU,GAAG,CAAC;AAAER,EAAAA,KAAF;AAASS,EAAAA,OAAT;AAAkBR,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAxB,CAAD,KACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGM,OAAO,CAACC,GAAR,CAAYC,CAAC,IACZ;AAAO,EAAA,GAAG,EAAEA,CAAC,CAACN,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,IAAI,EAAC;AADP,GAEML,KAFN;AAGE,EAAA,KAAK,EAAEW,CAAC,CAACN,KAHX;AAIE,EAAA,OAAO,EAAEM,CAAC,CAACN,KAAF,KAAYL,KAAK,CAACK,KAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,EAMK,GANL,EAOGM,CAAC,CAACC,KAPL,CADD,CADH,EAYGV,OAAO,IAAKC,KAAK,IAAI;AAAM,EAAA,KAAK,EAAE;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgCJ,KAAhC,CAZxB,CADK;AAiBP,OAAO,MAAMU,aAAa,GAAG,CAAC;AAAEb,EAAAA,KAAF;AAASS,EAAAA,OAAT;AAAkBR,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAxB,CAAD,KAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGM,OAAO,CAACC,GAAR,CAAYC,CAAC,IACZ;AAAO,EAAA,GAAG,EAAEA,CAAC,CAACN,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,IAAI,EAAC;AADP,GAEML,KAFN;AAGE,EAAA,IAAI,EAAEA,KAAK,CAACc,IAAN,GAAa,GAAb,GAAmBH,CAAC,CAACN,KAH7B;AAIE,EAAA,KAAK,EAAEM,CAAC,CAACN,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,EAMK,GANL,EAOGM,CAAC,CAACC,KAPL,CADD,CADH,EAYGV,OAAO,IAAKC,KAAK,IAAI;AAAM,EAAA,KAAK,EAAE;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgCJ,KAAhC,CAZxB,CADK","sourcesContent":["import React from \"react\";\r\n\r\nexport const renderField = ({\r\n  defaultValue,\r\n  input,\r\n  meta: { touched, error },\r\n  ...others\r\n}) => {\r\n  const { value, ...newVal } = input;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          {...newVal}\r\n          {...others}\r\n          defaultValue={value ? value : defaultValue}\r\n        />\r\n        {touched && (error && <span style={{ color: \"red\" }}>{error}</span>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const RadioGroup = ({ input, options, meta: { touched, error } }) => (\r\n  <div>\r\n    {options.map(o => (\r\n      <label key={o.value}>\r\n        <input\r\n          type=\"radio\"\r\n          {...input}\r\n          value={o.value}\r\n          checked={o.value === input.value}\r\n        />{\" \"}\r\n        {o.title}\r\n      </label>\r\n    ))}\r\n    {touched && (error && <span style={{ color: \"red\" }}>{error}</span>)}\r\n  </div>\r\n);\r\n\r\nexport const CheckboxGroup = ({ input, options, meta: { touched, error } }) => (\r\n  <div>\r\n    {options.map(o => (\r\n      <label key={o.value}>\r\n        <input\r\n          type=\"checkbox\"\r\n          {...input}\r\n          name={input.name + \"-\" + o.value}\r\n          value={o.value}\r\n        />{\" \"}\r\n        {o.title}\r\n      </label>\r\n    ))}\r\n    {touched && (error && <span style={{ color: \"red\" }}>{error}</span>)}\r\n  </div>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}