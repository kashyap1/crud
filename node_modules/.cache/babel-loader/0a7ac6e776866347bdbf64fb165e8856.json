{"ast":null,"code":"import _defineProperty from \"/Users/ktatmiya/learning/j/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_DATA_SUCCESS, FETCH_USER_DATA, DELETE_USER_DATA } from \"../actions/types\";\nconst initState = {\n  data: []\n};\n\nconst userReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_DATA_SUCCESS:\n      const userData = action.payload;\n      let newArr;\n\n      if (userData.id) {\n        newArr = _objectSpread({}, state.data, {\n          [userData.id]: userData\n        });\n      } else {\n        newArr = state.data.concat(action.payload);\n      }\n\n      return _objectSpread({}, state, {\n        data: newArr,\n        userSaved: true\n      });\n\n    case FETCH_USER_DATA:\n      const users = _objectSpread({}, state, {\n        userSaved: false\n      });\n\n      return users;\n\n    case DELETE_USER_DATA:\n      return _objectSpread({}, state, {\n        data: state.data.filter(({\n          id\n        }) => !action.payload.includes(id))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/ktatmiya/learning/j/src/store/reducers/userReducer.jsx"],"names":["ADD_DATA_SUCCESS","FETCH_USER_DATA","DELETE_USER_DATA","initState","data","userReducer","state","action","type","userData","payload","newArr","id","concat","userSaved","users","filter","includes"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,eAA3B,EAA4CC,gBAA5C,QAAoE,kBAApE;AAGA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AADU,CAAlB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,SAAT,EAAoBI,MAApB,KAA+B;AAE/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,gBAAL;AACE,YAAMS,QAAQ,GAAIF,MAAM,CAACG,OAAzB;AACA,UAAIC,MAAJ;;AACC,UAAGF,QAAQ,CAACG,EAAZ,EAAgB;AACfD,QAAAA,MAAM,qBACDL,KAAK,CAACF,IADL;AAEJ,WAACK,QAAQ,CAACG,EAAV,GAAeH;AAFX,UAAN;AAIA,OALD,MAKO;AACNE,QAAAA,MAAM,GAAGL,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAkBN,MAAM,CAACG,OAAzB,CAAT;AACC;;AAEC,+BACOJ,KADP;AAEIF,QAAAA,IAAI,EAAEO,MAFV;AAGIG,QAAAA,SAAS,EAAE;AAHf;;AAMN,SAAKb,eAAL;AACE,YAAMc,KAAK,qBACNT,KADM;AAETQ,QAAAA,SAAS,EAAE;AAFF,QAAX;;AAIA,aAAOC,KAAP;;AAEF,SAAKb,gBAAL;AAEE,+BAAYI,KAAZ;AAAmBF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWY,MAAX,CAAkB,CAAC;AAACJ,UAAAA;AAAD,SAAD,KAAU,CAACL,MAAM,CAACG,OAAP,CAAeO,QAAf,CAAwBL,EAAxB,CAA7B;AAAzB;;AAIF;AACE,aAAON,KAAP;AAjCJ;AAoCH,CAtCD;;AAwCA,eAAeD,WAAf","sourcesContent":["import { ADD_DATA_SUCCESS, FETCH_USER_DATA, DELETE_USER_DATA } from \"../actions/types\";\r\n\r\n\r\nconst initState = {\r\n  data: []\r\n};\r\n\r\nconst userReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n      case ADD_DATA_SUCCESS:\r\n        const userData  = action.payload;\r\n        let newArr;\r\n         if(userData.id) {\r\n          newArr = {\r\n            ...state.data,\r\n            [userData.id]: userData \r\n          };\r\n         } else {\r\n          newArr = state.data.concat(action.payload);\r\n          }\r\n\r\n            return {\r\n                ...state,\r\n                data: newArr,\r\n                userSaved: true\r\n            };\r\n\r\n      case FETCH_USER_DATA:\r\n        const users = { \r\n          ...state,\r\n          userSaved: false\r\n        };\r\n        return users;\r\n      \r\n      case DELETE_USER_DATA: \r\n\r\n        return { ...state, data: state.data.filter(({id}) => !action.payload.includes(id))};\r\n      \r\n\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n\r\n};\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}