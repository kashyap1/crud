{"ast":null,"code":"var _jsxFileName = \"/Users/ktatmiya/learning/j/src/components/Add.js\";\nimport React, { useEffect } from \"react\";\nimport { addUser, fetchUsers } from \"./../store/actions/userAction\";\nimport { Field, reduxForm, change } from \"redux-form\";\nimport { required, email } from \"./../validation/validate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { renderField, RadioGroup, CheckboxGroup } from \"./../utils/renderField\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nconst Add = props => {\n  const id = props.match.params.id;\n\n  const _useSelector = useSelector(state => {\n    return {\n      user: state.user.data.find(userData => userData.id === id),\n      userSaved: state.user.userSaved\n    };\n  }),\n        user = _useSelector.user,\n        userSaved = _useSelector.userSaved;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    id && dispatch(fetchUsers());\n  }, [dispatch, id]);\n  useEffect(() => {\n    console.log(user);\n\n    if (user) {\n      dispatch(change(\"AddForm\", \"id\", user.id));\n      dispatch(change(\"AddForm\", \"name\", user.name));\n      dispatch(change(\"AddForm\", \"email\", user.email));\n      dispatch(change(\"AddForm\", \"dob\", user.dob));\n      dispatch(change(\"AddForm\", \"portfolio\", user.portfolio));\n      dispatch(change(\"AddForm\", \"hobbies\", user.hobbies));\n      dispatch(change(\"AddForm\", \"gender\", user.gender));\n      dispatch(change(\"AddForm\", \"skills\", user.skills));\n    }\n  }, [dispatch, user]);\n  useEffect(() => {\n    if (userSaved) {\n      props.history.push(\"/\");\n    }\n  }, [props.history, userSaved]);\n  const handleSubmit = props.handleSubmit,\n        submitting = props.submitting;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"userSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cotainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-5 align-self-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Add/Edit User\"), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"userForm\",\n    autoComplete: \"off\",\n    className: \"form\",\n    onSubmit: handleSubmit(values => dispatch(addUser(values))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    id: \"name\",\n    component: renderField,\n    validate: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Field, {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    id: \"email\",\n    component: renderField,\n    validate: [required, email],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Field, {\n    className: \"form-control\",\n    placeholder: \"Dob\",\n    id: \"dob\",\n    name: \"dob\",\n    type: \"date\",\n    component: renderField,\n    validate: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Field, {\n    className: \"form-control\",\n    placeholder: \"Portfolio\",\n    type: \"text\",\n    id: \"portfolio\",\n    name: \"portfolio\",\n    component: renderField,\n    validate: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Hobbies\"), React.createElement(Field, {\n    component: CheckboxGroup,\n    name: \"hobbies\",\n    validate: required,\n    options: [{\n      title: 'Travel',\n      value: 'travel'\n    }, {\n      title: 'Music',\n      value: 'music'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(Field, {\n    component: RadioGroup,\n    name: \"gender\",\n    validate: required,\n    options: [{\n      title: 'Male',\n      value: 'male'\n    }, {\n      title: 'Female',\n      value: 'female'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Skills\"), React.createElement(Field, {\n    component: CheckboxGroup,\n    name: \"skills\",\n    validate: required,\n    options: [{\n      title: 'PHP',\n      value: 'php'\n    }, {\n      title: 'JavaScript',\n      value: 'javascript'\n    }, {\n      title: 'React',\n      value: 'react'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg my-2 my-sm-0\",\n    type: \"submit\",\n    name: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-secondary btn-lg ml-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Cancel\"))))))))));\n};\n\nexport default reduxForm({\n  form: \"AddForm\"\n})(withRouter(Add));","map":{"version":3,"sources":["/Users/ktatmiya/learning/j/src/components/Add.js"],"names":["React","useEffect","addUser","fetchUsers","Field","reduxForm","change","required","email","useDispatch","useSelector","renderField","RadioGroup","CheckboxGroup","withRouter","Link","Add","props","id","match","params","state","user","data","find","userData","userSaved","dispatch","console","log","name","dob","portfolio","hobbies","gender","skills","history","push","handleSubmit","submitting","values","title","value","form"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { addUser, fetchUsers} from \"./../store/actions/userAction\";\r\nimport { Field, reduxForm, change } from \"redux-form\";\r\nimport { required, email } from \"./../validation/validate\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { renderField, RadioGroup, CheckboxGroup } from \"./../utils/renderField\";\r\nimport { withRouter,Link } from \"react-router-dom\";\r\n\r\n\r\nconst Add = props =>{\r\n\r\n  const { id } = props.match.params;\r\n  const {user, userSaved} = useSelector(state => {\r\n    return {user:state.user.data.find(userData =>userData.id === id),\r\n      userSaved: state.user.userSaved};\r\n  });\r\n\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    id && dispatch(fetchUsers());\r\n  }, [dispatch, id]);\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      console.log(user);\r\n      if (user) {\r\n\r\n        dispatch(change(\"AddForm\", \"id\", user.id));\r\n        dispatch(change(\"AddForm\", \"name\", user.name));\r\n        dispatch(change(\"AddForm\", \"email\", user.email));\r\n        dispatch(change(\"AddForm\", \"dob\", user.dob));\r\n        dispatch(change(\"AddForm\", \"portfolio\", user.portfolio));\r\n        dispatch(change(\"AddForm\", \"hobbies\", user.hobbies));\r\n        dispatch(change(\"AddForm\", \"gender\", user.gender));\r\n        dispatch(change(\"AddForm\", \"skills\", user.skills));\r\n      }     \r\n    },\r\n    [dispatch, user]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if(userSaved){\r\n        props.history.push(\"/\");\r\n      }\r\n    },\r\n    [props.history, userSaved]); \r\n    \r\n    const { handleSubmit, submitting } = props;\r\n\r\n    return (\r\n      <div> \r\n        <section className=\"userSection\">\r\n        <div className=\"cotainer\">\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-5 align-self-center\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">Add/Edit User</div>\r\n                    <div className=\"card-body\">\r\n             \r\n                <form\r\n                  id=\"userForm\"\r\n                  autoComplete=\"off\"\r\n                  className=\"form\"\r\n                  onSubmit={handleSubmit((values) => dispatch(addUser(values)))}\r\n                >\r\n                <div className=\"form-group\">\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Name\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      \r\n                      component={renderField}\r\n                      validate={required}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      \r\n                      component={renderField}\r\n                      validate={[required, email]}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <Field\r\n                  className=\"form-control\"\r\n                      placeholder=\"Dob\"\r\n                      id=\"dob\"\r\n                      name=\"dob\"\r\n                      type=\"date\"\r\n                      \r\n                      component={renderField}\r\n                      validate={required}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                  <Field\r\n                  className=\"form-control\"\r\n                  placeholder=\"Portfolio\"\r\n                          type=\"text\"\r\n                          id=\"portfolio\"\r\n                          name=\"portfolio\"\r\n                      \r\n                      component={renderField}\r\n                      validate={required}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                  <label>Hobbies</label>\r\n                  <Field component={CheckboxGroup} name=\"hobbies\" validate={required} options={[\r\n                        { title: 'Travel', value: 'travel' },\r\n                        { title: 'Music', value: 'music' }\r\n                    ]} /> \r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                  <label>Gender</label>\r\n                \r\n                <Field component={RadioGroup} name=\"gender\" validate={required} options={[\r\n                        { title: 'Male', value: 'male' },\r\n                        { title: 'Female', value: 'female' }\r\n                    ]} /> \r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <label>Skills</label>\r\n                  <Field component={CheckboxGroup} name=\"skills\" validate={required} options={[\r\n                        { title: 'PHP', value: 'php' },\r\n                        { title: 'JavaScript', value: 'javascript' },\r\n                        { title: 'React', value: 'react' }\r\n                    ]} /> \r\n                  </div>\r\n                  \r\n                  <div className=\"form-group text-left\">\r\n                    <button\r\n                      className=\"btn btn-primary btn-lg my-2 my-sm-0\"\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      disabled={submitting}\r\n                    >\r\n                    Submit\r\n                    </button>\r\n                    <Link\r\n              to=\"/\"\r\n              className=\"btn btn-secondary btn-lg ml-3\"\r\n            >\r\n              Cancel\r\n            </Link>\r\n                  </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"AddForm\"\r\n})(withRouter(Add));"]},"metadata":{},"sourceType":"module"}